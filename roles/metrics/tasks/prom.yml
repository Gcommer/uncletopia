---
- name: Create prometheus_data volume
  docker_volume:
    name: prometheus_data
    state: present
  tags:
    - metrics-server

- name: Generate /etc/prometheus.yml
  become: true
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus.yml
    mode: 0775
  tags:
    - metrics-server

- name: Create prometheus container
  docker_container:
    name: prometheus
    image: prom/prometheus:latest
    restart: true
    purge_networks: true
    restart_policy: always
    recreate: true
    networks:
      - name: caddy_net
    volumes:
      - prometheus_data:/prometheus
      - /etc/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 127.0.0.1:9090:9090
  tags:
    - metrics-server

- name: Generate /etc/alertmanager.yml
  become: true
  ansible.builtin.template:
    src: alertmanager.yml.j2
    dest: /etc/alertmanager.yml
    mode: 0775
  tags:
    - metrics-server

- name: Create alertmanager container
  docker_container:
    name: alertmanager
    image: prom/alertmanager:latest
    restart: true
    purge_networks: true
    restart_policy: always
    recreate: true
    networks:
      - name: caddy_net
    volumes:
      - /etc/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - 127.0.0.1:9093:9093
  tags:
    - metrics-server

- name: Create node_exporter container
  docker_container:
    name: node_exporter
    image: prom/node-exporter:latest
    restart_policy: always
    restart: true
    volumes:
      - "/:/host:ro,rslave"
    command:
      - "--path.rootfs=/host"
    ports:
      - "{{ vpn_hosts[inventory_hostname] }}:9100:9100"
  tags:
    - metrics-client

